# Config for multi-device QLoRA in lora_finetune_fsdp2.py
# using a Llama3.1 405B model
#
# This config requires PyTorch nightlies to run.
# See https://pytorch.org/torchtune/main/install.html#install-instructions
# for setup instructions.
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Meta-Llama-3.1-405B-Instruct --ignore-patterns "original/consolidated*" --hf-token <HF_TOKEN>
#
# This config needs 8 GPUs to run
#   # tune run --nproc_per_node 8 lora_finetune_distributed --config llama3_1/405B_qlora
#
# !!!!!!!!!!!!!
# !!!!!!!!!!!!!
# ATTENTION: It will only work with pytorch>=2.5 (nightlies). For other pytorch versions, it will OOM, even on 8xA100.
# !!!!!!!!!!!!!
# !!!!!!!!!!!!!

# Model Arguments
model:
  _component_: torchtune.models.llama3_1.qlora_llama3_1_405b
  lora_attn_modules: ['q_proj', 'v_proj', 'k_proj', 'output_proj']
  apply_lora_to_mlp: True
  apply_lora_to_output: False
  lora_rank: 16
  lora_alpha: 32

tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /tmp/Meta-Llama-3.1-405B-Instruct/original/mp8/tokenizer.model

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /tmp/Meta-Llama-3.1-405B-Instruct/
  checkpoint_files:
    filename_format: model-{}-of-{}.safetensors
    max_filename: 00191
  recipe_checkpoint: null
  output_dir: /tmp/Meta-Llama-3.1-405B-Instruct/
  model_type: LLAMA3
resume_from_checkpoint: False
save_adapter_weights_only: True

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.alpaca_dataset
  train_on_input: True
seed: null
shuffle: True
batch_size: 1

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  weight_decay: 0.01
  lr: 3e-4
  fused: True
lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torch.nn.CrossEntropyLoss

fsdp:
  cpu_offload: False

# Training
epochs: 1
max_steps_per_epoch: null
gradient_accumulation_steps: 16
compile: False # set it to True for better memory and performance

# Logging
output_dir: /tmp/qlora_finetune_output
metric_logger:
  _component_: torchtune.training.metric_logging.DiskLogger
  log_dir: ${output_dir}
log_every_n_steps: 1
log_peak_memory_stats: True

# Environment
device: cuda
dtype: bf16
enable_activation_checkpointing: True
