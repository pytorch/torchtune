# Config for multi-device LoRA in lora_finetune_distributed.py
# using a Llama2 70B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download meta-llama/Llama-2-70b-hf --output-dir /tmp/Llama-2-70b-hf --hf-token <HF_TOKEN>
#
# This config needs 8 GPUs to run
#   # tune run --nproc_per_node 8 lora_finetune_distributed --config llama2/70B_lora
#

# Model Arguments
model:
  _component_: torchtune.models.llama2.lora_llama2_70b
  lora_attn_modules: ['q_proj', 'v_proj', 'k_proj']
  apply_lora_to_mlp: False
  apply_lora_to_output: False
  lora_rank: 16
  lora_alpha: 32

tokenizer:
  _component_: torchtune.models.llama2.llama2_tokenizer
  path: /tmp/Llama-2-70b-hf/tokenizer.model

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir:  /tmp/Llama-2-70b-hf
  checkpoint_files: [
    pytorch_model-00001-of-00015.bin,
    pytorch_model-00002-of-00015.bin,
    pytorch_model-00003-of-00015.bin,
    pytorch_model-00004-of-00015.bin,
    pytorch_model-00005-of-00015.bin,
    pytorch_model-00006-of-00015.bin,
    pytorch_model-00007-of-00015.bin,
    pytorch_model-00008-of-00015.bin,
    pytorch_model-00009-of-00015.bin,
    pytorch_model-00010-of-00015.bin,
    pytorch_model-00011-of-00015.bin,
    pytorch_model-00012-of-00015.bin,
    pytorch_model-00013-of-00015.bin,
    pytorch_model-00014-of-00015.bin,
    pytorch_model-00015-of-00015.bin,
  ]
  recipe_checkpoint: null
  output_dir: /tmp/Llama-2-70b-hf
  model_type: LLAMA2
resume_from_checkpoint: False

# Dataset and Sampler
dataset:
  _component_: torchtune.datasets.alpaca_dataset
  train_on_input: True
seed: null
shuffle: True
batch_size: 2

# Optimizer and Scheduler
optimizer:
  _component_: torch.optim.AdamW
  weight_decay: 0.01
  lr: 3e-4
lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torch.nn.CrossEntropyLoss

# Training
epochs: 1
max_steps_per_epoch: null
gradient_accumulation_steps: 1

# Logging
output_dir: /tmp/lora_finetune_output
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
log_every_n_steps: 1
log_peak_memory_stats: False

# Environment
device: cuda
dtype: bf16
enable_activation_checkpointing: True
